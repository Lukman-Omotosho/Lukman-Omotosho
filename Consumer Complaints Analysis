{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9112989,"sourceType":"datasetVersion","datasetId":5500444}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## Introduction\nThis analysis stems from a survey conducted on the issues faced by different bank customers. The survey was filled by customers of different banks. With this analysis, we wish to derive insights from the different issues faced by the customers and also establish relationships and trends from the data.\n\n## Preparing The Data and Other Requirements\nThe dataset to be used was extracted from data.world website and it will be the basis for our analysis. Firstly let's load the libraries required for our analysis.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","metadata":{"execution":{"iopub.status.busy":"2024-08-11T06:44:50.788903Z","iopub.execute_input":"2024-08-11T06:44:50.789301Z","iopub.status.idle":"2024-08-11T06:44:51.917988Z","shell.execute_reply.started":"2024-08-11T06:44:50.789271Z","shell.execute_reply":"2024-08-11T06:44:51.916931Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":"The next thing is to load the dataset required for the analysis.","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/consumer-complaints-data/P9-ConsumerComplaints.csv')","metadata":{"execution":{"iopub.status.busy":"2024-08-11T07:39:21.413986Z","iopub.execute_input":"2024-08-11T07:39:21.414397Z","iopub.status.idle":"2024-08-11T07:39:21.726324Z","shell.execute_reply.started":"2024-08-11T07:39:21.414369Z","shell.execute_reply":"2024-08-11T07:39:21.725177Z"},"trusted":true},"execution_count":24,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/3785490344.py:1: DtypeWarning: Columns (5,11) have mixed types. Specify dtype option on import or set low_memory=False.\n  df = pd.read_csv('/kaggle/input/consumer-complaints-data/P9-ConsumerComplaints.csv')\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## About The Dataset\nThe code below will give us some information about the dataset.","metadata":{}},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-08-11T06:45:06.698725Z","iopub.execute_input":"2024-08-11T06:45:06.699150Z","iopub.status.idle":"2024-08-11T06:45:06.782013Z","shell.execute_reply.started":"2024-08-11T06:45:06.699119Z","shell.execute_reply":"2024-08-11T06:45:06.780699Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 65499 entries, 0 to 65498\nData columns (total 18 columns):\n #   Column                        Non-Null Count  Dtype \n---  ------                        --------------  ----- \n 0   Date Received                 65499 non-null  object\n 1   Product Name                  65499 non-null  object\n 2   Sub Product                   46935 non-null  object\n 3   Issue                         65499 non-null  object\n 4   Sub Issue                     30658 non-null  object\n 5   Consumer Complaint Narrative  2614 non-null   object\n 6   Company Public Response       2450 non-null   object\n 7   Company                       65499 non-null  object\n 8   State Name                    65021 non-null  object\n 9   Zip Code                      65021 non-null  object\n 10  Tags                          9681 non-null   object\n 11  Consumer Consent Provided     4760 non-null   object\n 12  Submitted via                 65499 non-null  object\n 13  Date Sent to Company          65499 non-null  object\n 14  Company Response to Consumer  65499 non-null  object\n 15  Timely Response               65499 non-null  object\n 16  Consumer Disputed             64391 non-null  object\n 17  Complaint ID                  65499 non-null  int64 \ndtypes: int64(1), object(17)\nmemory usage: 9.0+ MB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"So our dataset comprises of 18 columns and 64599 rows. 17 columns have the object datatype while 1 column is of type integer.\n\nLet's familiarise ourselves with the column names:\n\n* Date received - The date the issue was encountered by the customer.\n* Product Name - The type of product related with the issue.\n* Sub Product - This is giving us more specific details about the product on which the issue was encountered.\n* Issue - The problem encountered by the customer.\n* Sub Issue - More details on the issue encountered.\n* Consumer Complaint Narrative - Narration of the complaints made by the customer.\n* Company Public Response - The response given by the company on receiving the complaint.\n* Company - The name of the company.\n* State Name - The state the complaint was made.\n* Zip Code - The customer's zip code.\n* Tags - Whether older American or service member.\n* Consumer Consent Provided - Whether consent was provided or not by the consumer.\n* Submitted via - How the complaint was submitted.\n* Date Sent to Company - The date the complaint was sent to the company.\n* Company Response to Customer - How the company responded to the customer.\n* Timely Response - Whether the company responded timely or not.\n* Consumer Disputed - Whether consumer disputed or not.\n* Complaint ID - The specific identification number for each complaints.\n\n\n\nWe'll see if there is any cleaning or processing required before analyzing the data but let's first view the first five rows the dataset.","metadata":{}},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-11T06:45:20.957136Z","iopub.execute_input":"2024-08-11T06:45:20.957520Z","iopub.status.idle":"2024-08-11T06:45:20.984145Z","shell.execute_reply.started":"2024-08-11T06:45:20.957487Z","shell.execute_reply":"2024-08-11T06:45:20.983066Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"  Date Received             Product Name                  Sub Product  \\\n0    2013-07-29            Consumer Loan                 Vehicle loan   \n1    2013-07-29  Bank account or service             Checking account   \n2    2013-07-29  Bank account or service             Checking account   \n3    2013-07-29  Bank account or service             Checking account   \n4    2013-07-29                 Mortgage  Conventional fixed mortgage   \n\n                                      Issue Sub Issue  \\\n0                Managing the loan or lease       NaN   \n1                 Using a debit or ATM card       NaN   \n2   Account opening, closing, or management       NaN   \n3                  Deposits and withdrawals       NaN   \n4  Loan servicing, payments, escrow account       NaN   \n\n  Consumer Complaint Narrative Company Public Response  \\\n0                          NaN                     NaN   \n1                          NaN                     NaN   \n2                          NaN                     NaN   \n3                          NaN                     NaN   \n4                          NaN                     NaN   \n\n                      Company State Name Zip Code            Tags  \\\n0       Wells Fargo & Company         VA    24540             NaN   \n1       Wells Fargo & Company         CA    95992  Older American   \n2           Santander Bank US         NY    10065             NaN   \n3       Wells Fargo & Company         GA    30084             NaN   \n4  Franklin Credit Management         CT     6106             NaN   \n\n  Consumer Consent Provided Submitted via Date Sent to Company  \\\n0                       NaN         Phone           2013-07-30   \n1                       NaN           Web           2013-07-31   \n2                       NaN           Fax           2013-07-31   \n3                       NaN           Web           2013-07-30   \n4                       NaN           Web           2013-07-30   \n\n  Company Response to Consumer Timely Response Consumer Disputed  Complaint ID  \n0      Closed with explanation             Yes                No        468882  \n1      Closed with explanation             Yes                No        468889  \n2                       Closed             Yes                No        468879  \n3      Closed with explanation             Yes                No        468949  \n4      Closed with explanation             Yes                No        475823  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date Received</th>\n      <th>Product Name</th>\n      <th>Sub Product</th>\n      <th>Issue</th>\n      <th>Sub Issue</th>\n      <th>Consumer Complaint Narrative</th>\n      <th>Company Public Response</th>\n      <th>Company</th>\n      <th>State Name</th>\n      <th>Zip Code</th>\n      <th>Tags</th>\n      <th>Consumer Consent Provided</th>\n      <th>Submitted via</th>\n      <th>Date Sent to Company</th>\n      <th>Company Response to Consumer</th>\n      <th>Timely Response</th>\n      <th>Consumer Disputed</th>\n      <th>Complaint ID</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2013-07-29</td>\n      <td>Consumer Loan</td>\n      <td>Vehicle loan</td>\n      <td>Managing the loan or lease</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Wells Fargo &amp; Company</td>\n      <td>VA</td>\n      <td>24540</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Phone</td>\n      <td>2013-07-30</td>\n      <td>Closed with explanation</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>468882</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2013-07-29</td>\n      <td>Bank account or service</td>\n      <td>Checking account</td>\n      <td>Using a debit or ATM card</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Wells Fargo &amp; Company</td>\n      <td>CA</td>\n      <td>95992</td>\n      <td>Older American</td>\n      <td>NaN</td>\n      <td>Web</td>\n      <td>2013-07-31</td>\n      <td>Closed with explanation</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>468889</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2013-07-29</td>\n      <td>Bank account or service</td>\n      <td>Checking account</td>\n      <td>Account opening, closing, or management</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Santander Bank US</td>\n      <td>NY</td>\n      <td>10065</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Fax</td>\n      <td>2013-07-31</td>\n      <td>Closed</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>468879</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2013-07-29</td>\n      <td>Bank account or service</td>\n      <td>Checking account</td>\n      <td>Deposits and withdrawals</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Wells Fargo &amp; Company</td>\n      <td>GA</td>\n      <td>30084</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Web</td>\n      <td>2013-07-30</td>\n      <td>Closed with explanation</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>468949</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2013-07-29</td>\n      <td>Mortgage</td>\n      <td>Conventional fixed mortgage</td>\n      <td>Loan servicing, payments, escrow account</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Franklin Credit Management</td>\n      <td>CT</td>\n      <td>6106</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Web</td>\n      <td>2013-07-30</td>\n      <td>Closed with explanation</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>475823</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## Data Processing\nLet's check the amount of null values we have in each column.","metadata":{}},{"cell_type":"code","source":"na_values = df.isnull().sum()\nna_values","metadata":{"execution":{"iopub.status.busy":"2024-08-11T07:39:44.139799Z","iopub.execute_input":"2024-08-11T07:39:44.140248Z","iopub.status.idle":"2024-08-11T07:39:44.200513Z","shell.execute_reply.started":"2024-08-11T07:39:44.140214Z","shell.execute_reply":"2024-08-11T07:39:44.198964Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"Date Received                       0\nProduct Name                        0\nSub Product                     18564\nIssue                               0\nSub Issue                       34841\nConsumer Complaint Narrative    62885\nCompany Public Response         63049\nCompany                             0\nState Name                        478\nZip Code                          478\nTags                            55818\nConsumer Consent Provided       60739\nSubmitted via                       0\nDate Sent to Company                0\nCompany Response to Consumer        0\nTimely Response                     0\nConsumer Disputed                1108\nComplaint ID                        0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"It can be seen that respondents neglected some peculiar parts of the survey, which probably means they didn't feel comfortable filling that part or they had no response to give such as in the 'Company Public Response' and 'Consumer Complaint Narrative'. \nWe'll be deleting columns which are majorly filled with null values to make our data look better.\n","metadata":{}},{"cell_type":"code","source":"df = df.drop(['Consumer Complaint Narrative', 'Company Public Response', 'Tags', 'Consumer Consent Provided','Sub Issue'], axis = 1)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-11T07:39:51.062716Z","iopub.execute_input":"2024-08-11T07:39:51.063145Z","iopub.status.idle":"2024-08-11T07:39:51.099425Z","shell.execute_reply.started":"2024-08-11T07:39:51.063111Z","shell.execute_reply":"2024-08-11T07:39:51.097934Z"},"trusted":true},"execution_count":26,"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"  Date Received             Product Name                  Sub Product  \\\n0    2013-07-29            Consumer Loan                 Vehicle loan   \n1    2013-07-29  Bank account or service             Checking account   \n2    2013-07-29  Bank account or service             Checking account   \n3    2013-07-29  Bank account or service             Checking account   \n4    2013-07-29                 Mortgage  Conventional fixed mortgage   \n\n                                      Issue                     Company  \\\n0                Managing the loan or lease       Wells Fargo & Company   \n1                 Using a debit or ATM card       Wells Fargo & Company   \n2   Account opening, closing, or management           Santander Bank US   \n3                  Deposits and withdrawals       Wells Fargo & Company   \n4  Loan servicing, payments, escrow account  Franklin Credit Management   \n\n  State Name Zip Code Submitted via Date Sent to Company  \\\n0         VA    24540         Phone           2013-07-30   \n1         CA    95992           Web           2013-07-31   \n2         NY    10065           Fax           2013-07-31   \n3         GA    30084           Web           2013-07-30   \n4         CT     6106           Web           2013-07-30   \n\n  Company Response to Consumer Timely Response Consumer Disputed  Complaint ID  \n0      Closed with explanation             Yes                No        468882  \n1      Closed with explanation             Yes                No        468889  \n2                       Closed             Yes                No        468879  \n3      Closed with explanation             Yes                No        468949  \n4      Closed with explanation             Yes                No        475823  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date Received</th>\n      <th>Product Name</th>\n      <th>Sub Product</th>\n      <th>Issue</th>\n      <th>Company</th>\n      <th>State Name</th>\n      <th>Zip Code</th>\n      <th>Submitted via</th>\n      <th>Date Sent to Company</th>\n      <th>Company Response to Consumer</th>\n      <th>Timely Response</th>\n      <th>Consumer Disputed</th>\n      <th>Complaint ID</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2013-07-29</td>\n      <td>Consumer Loan</td>\n      <td>Vehicle loan</td>\n      <td>Managing the loan or lease</td>\n      <td>Wells Fargo &amp; Company</td>\n      <td>VA</td>\n      <td>24540</td>\n      <td>Phone</td>\n      <td>2013-07-30</td>\n      <td>Closed with explanation</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>468882</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2013-07-29</td>\n      <td>Bank account or service</td>\n      <td>Checking account</td>\n      <td>Using a debit or ATM card</td>\n      <td>Wells Fargo &amp; Company</td>\n      <td>CA</td>\n      <td>95992</td>\n      <td>Web</td>\n      <td>2013-07-31</td>\n      <td>Closed with explanation</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>468889</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2013-07-29</td>\n      <td>Bank account or service</td>\n      <td>Checking account</td>\n      <td>Account opening, closing, or management</td>\n      <td>Santander Bank US</td>\n      <td>NY</td>\n      <td>10065</td>\n      <td>Fax</td>\n      <td>2013-07-31</td>\n      <td>Closed</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>468879</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2013-07-29</td>\n      <td>Bank account or service</td>\n      <td>Checking account</td>\n      <td>Deposits and withdrawals</td>\n      <td>Wells Fargo &amp; Company</td>\n      <td>GA</td>\n      <td>30084</td>\n      <td>Web</td>\n      <td>2013-07-30</td>\n      <td>Closed with explanation</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>468949</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2013-07-29</td>\n      <td>Mortgage</td>\n      <td>Conventional fixed mortgage</td>\n      <td>Loan servicing, payments, escrow account</td>\n      <td>Franklin Credit Management</td>\n      <td>CT</td>\n      <td>6106</td>\n      <td>Web</td>\n      <td>2013-07-30</td>\n      <td>Closed with explanation</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>475823</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-11T07:40:00.352287Z","iopub.execute_input":"2024-08-11T07:40:00.353314Z","iopub.status.idle":"2024-08-11T07:40:00.415990Z","shell.execute_reply.started":"2024-08-11T07:40:00.353269Z","shell.execute_reply":"2024-08-11T07:40:00.412810Z"},"trusted":true},"execution_count":27,"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"Date Received                       0\nProduct Name                        0\nSub Product                     18564\nIssue                               0\nCompany                             0\nState Name                        478\nZip Code                          478\nSubmitted via                       0\nDate Sent to Company                0\nCompany Response to Consumer        0\nTimely Response                     0\nConsumer Disputed                1108\nComplaint ID                        0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"Let's delete the other rows containing null values","metadata":{}},{"cell_type":"code","source":"df = df.dropna()\ndf.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-11T07:40:06.028468Z","iopub.execute_input":"2024-08-11T07:40:06.028928Z","iopub.status.idle":"2024-08-11T07:40:06.115175Z","shell.execute_reply.started":"2024-08-11T07:40:06.028894Z","shell.execute_reply":"2024-08-11T07:40:06.113790Z"},"trusted":true},"execution_count":28,"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"Date Received                   0\nProduct Name                    0\nSub Product                     0\nIssue                           0\nCompany                         0\nState Name                      0\nZip Code                        0\nSubmitted via                   0\nDate Sent to Company            0\nCompany Response to Consumer    0\nTimely Response                 0\nConsumer Disputed               0\nComplaint ID                    0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"Good, our data is free of null values. Let's check the number of columns and rows after the null values have been deleted.","metadata":{}},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-08-11T06:45:58.897739Z","iopub.execute_input":"2024-08-11T06:45:58.898839Z","iopub.status.idle":"2024-08-11T06:45:58.938462Z","shell.execute_reply.started":"2024-08-11T06:45:58.898795Z","shell.execute_reply":"2024-08-11T06:45:58.937272Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 45945 entries, 0 to 65498\nData columns (total 13 columns):\n #   Column                        Non-Null Count  Dtype \n---  ------                        --------------  ----- \n 0   Date Received                 45945 non-null  object\n 1   Product Name                  45945 non-null  object\n 2   Sub Product                   45945 non-null  object\n 3   Issue                         45945 non-null  object\n 4   Company                       45945 non-null  object\n 5   State Name                    45945 non-null  object\n 6   Zip Code                      45945 non-null  object\n 7   Submitted via                 45945 non-null  object\n 8   Date Sent to Company          45945 non-null  object\n 9   Company Response to Consumer  45945 non-null  object\n 10  Timely Response               45945 non-null  object\n 11  Consumer Disputed             45945 non-null  object\n 12  Complaint ID                  45945 non-null  int64 \ndtypes: int64(1), object(12)\nmemory usage: 4.9+ MB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Not bad, we have 13 columns and 45945 rows. Let's find out if we have any duplicate rows in the data.","metadata":{}},{"cell_type":"code","source":"dup_rows = df.duplicated().sum()\ndup_rows","metadata":{"execution":{"iopub.status.busy":"2024-08-11T07:40:16.657416Z","iopub.execute_input":"2024-08-11T07:40:16.657830Z","iopub.status.idle":"2024-08-11T07:40:16.729488Z","shell.execute_reply.started":"2024-08-11T07:40:16.657795Z","shell.execute_reply":"2024-08-11T07:40:16.728066Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}]},{"cell_type":"markdown","source":"There are no duplicates in the data so we can move to the main analysis.\n\n## Data Analysis\n\n### Issues encountered by customers","metadata":{}},{"cell_type":"code","source":"df['Issue'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-11T06:51:35.217406Z","iopub.execute_input":"2024-08-11T06:51:35.217817Z","iopub.status.idle":"2024-08-11T06:51:35.231861Z","shell.execute_reply.started":"2024-08-11T06:51:35.217784Z","shell.execute_reply":"2024-08-11T06:51:35.230506Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"Issue\nLoan modification,collection,foreclosure    9233\nLoan servicing, payments, escrow account    6634\nCont'd attempts collect debt not owed       6593\nCommunication tactics                       2896\nAccount opening, closing, or management     2829\nDisclosure verification of debt             2697\nDeposits and withdrawals                    1732\nFalse statements or representation          1232\nApplication, originator, mortgage broker    1228\nImproper contact or sharing of info         1197\nManaging the loan or lease                  1104\nTaking/threatening an illegal action         968\nProblems caused by my funds being low        831\nDealing with my lender or servicer           815\nSettlement process and costs                 704\nProblems when you are unable to pay          651\nCan't repay my loan                          638\nMaking/receiving payments, sending money     556\nUsing a debit or ATM card                    461\nCredit decision / Underwriting               432\nTaking out the loan or lease                 337\nCharged fees or interest I didn't expect     299\nOther                                        275\nFraud or scam                                241\nRepaying your loan                           229\nShopping for a loan or lease                 141\nOther transaction issues                     124\nCan't contact lender                          99\nMoney was not available when promised         91\nManaging, opening, or closing account         66\nReceived a loan I didn't apply for            57\nUnauthorized transactions/trans. issues       56\nApplied for loan/did not receive money        55\nManaging the line of credit                   54\nGetting a loan                                53\nCan't stop charges to bank account            50\nPayment to acct not credited                  45\nOther service issues                          43\nAccount terms and changes                     38\nCharged bank acct wrong day or amt            25\nShopping for a line of credit                 24\nWrong amount charged or received              21\nIncorrect/missing disclosures or info         21\nCustomer service/Customer relations           17\nFees                                          12\nUnexpected/Other fees                          8\nAdding money                                   8\nLender repossessed or sold the vehicle         6\nDisclosures                                    4\nLender damaged or destroyed vehicle            3\nAdvertising, marketing or disclosures          2\nOverdraft, savings or rewards features         2\nIncorrect exchange rate                        2\nLost or stolen money order                     2\nExcessive fees                                 1\nLost or stolen check                           1\nLender sold the property                       1\nAdvertising and marketing                      1\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"We can see that most customers had issues related to loans.\n\n### Number of complaints made on each product","metadata":{}},{"cell_type":"code","source":"df['Product Name'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-11T06:57:39.019578Z","iopub.execute_input":"2024-08-11T06:57:39.020418Z","iopub.status.idle":"2024-08-11T06:57:39.032712Z","shell.execute_reply.started":"2024-08-11T06:57:39.020375Z","shell.execute_reply":"2024-08-11T06:57:39.031262Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"Product Name\nMortgage                   18506\nDebt collection            15583\nBank account or service     6409\nConsumer Loan               2316\nStudent loan                1811\nPayday loan                  597\nMoney transfers              482\nPrepaid card                 187\nOther financial service       54\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"### Number of compaints received by companies","metadata":{}},{"cell_type":"code","source":"df['Company'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-11T07:03:20.437470Z","iopub.execute_input":"2024-08-11T07:03:20.437920Z","iopub.status.idle":"2024-08-11T07:03:20.453466Z","shell.execute_reply.started":"2024-08-11T07:03:20.437869Z","shell.execute_reply":"2024-08-11T07:03:20.451940Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"Company\nBank of America                           4070\nWells Fargo & Company                     3712\nJPMorgan Chase & Co.                      2611\nOcwen                                     2489\nNationstar Mortgage                       1786\n                                          ... \nSouth Exchange Inc                           1\nAqua Finance Inc                             1\nCypress Collections                          1\nSchiller & Adam, P.A.                        1\nAdvanced Call Center Technologies, LLC       1\nName: count, Length: 1736, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"### The state where most number of complaints emerged from","metadata":{}},{"cell_type":"code","source":"df['State Name'].value_counts().idxmax()","metadata":{"execution":{"iopub.status.busy":"2024-08-11T07:06:38.195026Z","iopub.execute_input":"2024-08-11T07:06:38.195421Z","iopub.status.idle":"2024-08-11T07:06:38.208028Z","shell.execute_reply.started":"2024-08-11T07:06:38.195390Z","shell.execute_reply":"2024-08-11T07:06:38.206944Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"'CA'"},"metadata":{}}]},{"cell_type":"markdown","source":"The most complaints emerged from california.\n\n### The company customers disputed most with","metadata":{}},{"cell_type":"code","source":"dispute_df = df[['Company', 'Consumer Disputed']]\ndispute_df[dispute_df['Consumer Disputed']=='Yes'].groupby(['Company','Consumer Disputed']).value_counts().idxmax()","metadata":{"execution":{"iopub.status.busy":"2024-08-11T07:49:32.418421Z","iopub.execute_input":"2024-08-11T07:49:32.418797Z","iopub.status.idle":"2024-08-11T07:49:32.447107Z","shell.execute_reply.started":"2024-08-11T07:49:32.418768Z","shell.execute_reply":"2024-08-11T07:49:32.445973Z"},"trusted":true},"execution_count":34,"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"('Bank of America', 'Yes')"},"metadata":{}}]},{"cell_type":"markdown","source":"Customers disputed with Bank of America the most\n\n### Number of complaints received on each day of the week","metadata":{}},{"cell_type":"code","source":"df['Date Received'] = pd.to_datetime(df['Date Received'])\ndf['Day of Date Received'] = df['Date Received'].dt.day_name()\ndf['Day of Date Received'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-11T07:40:51.138720Z","iopub.execute_input":"2024-08-11T07:40:51.139459Z","iopub.status.idle":"2024-08-11T07:40:51.178464Z","shell.execute_reply.started":"2024-08-11T07:40:51.139422Z","shell.execute_reply":"2024-08-11T07:40:51.177367Z"},"trusted":true},"execution_count":30,"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"Day of Date Received\nThursday     8883\nWednesday    8818\nTuesday      8630\nMonday       7707\nFriday       7625\nSaturday     2555\nSunday       1727\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"Most of the complaints were received on Thursday and Wednesday.\n\n### Companies which gave explanation for issues encountered","metadata":{}},{"cell_type":"code","source":"response_df = df[['Company', 'Company Response to Consumer']]\ngroup_response = df[df['Company Response to Consumer']== 'Closed with explanation'].groupby('Company')['Company Response to Consumer'].count()\ngroup_response.sort_values(ascending = False)","metadata":{"execution":{"iopub.status.busy":"2024-08-11T08:04:38.720940Z","iopub.execute_input":"2024-08-11T08:04:38.721794Z","iopub.status.idle":"2024-08-11T08:04:38.757745Z","shell.execute_reply.started":"2024-08-11T08:04:38.721754Z","shell.execute_reply":"2024-08-11T08:04:38.756578Z"},"trusted":true},"execution_count":43,"outputs":[{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"Company\nBank of America                                         3188\nWells Fargo & Company                                   3179\nJPMorgan Chase & Co.                                    2325\nOcwen                                                   2285\nNationstar Mortgage                                     1775\n                                                        ... \nFirst Financial Resources, Inc.                            1\nQuantum Accounts Receivable Management Services Inc.       1\nFirst Direct Lending, LLC                                  1\nFirst Continental Mortgage, Ltd                            1\niServe Trust                                               1\nName: Company Response to Consumer, Length: 1555, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"### The number of complaints submitted by each medium","metadata":{}},{"cell_type":"code","source":"df['Submitted via'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-11T08:09:13.888462Z","iopub.execute_input":"2024-08-11T08:09:13.888879Z","iopub.status.idle":"2024-08-11T08:09:13.901980Z","shell.execute_reply.started":"2024-08-11T08:09:13.888825Z","shell.execute_reply":"2024-08-11T08:09:13.900674Z"},"trusted":true},"execution_count":44,"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"Submitted via\nWeb            31033\nReferral        8121\nPhone           4009\nPostal mail     2069\nFax              701\nEmail             12\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"Majority of the complaints were submitted through the web.","metadata":{}}]}